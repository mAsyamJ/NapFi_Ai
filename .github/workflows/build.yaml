name: Build and deploy

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend-app
    permissions:
      contents: "read"
      id-token: "write"
    env:
      IMAGE_NAME: napfi-ai
      PROJECT_ID: napfi-ai
      ARTIFACT_REGION: asia-southeast2-docker.pkg.dev
      PACKAGE_MANAGER: bun
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Node.js without caching
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # Setup Bun
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      # Install dependencies
      - name: Install dependencies
        run: bun install

      # Build Next.js app
      - name: Build Next.js app
        env:
          NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID: "47ef282c9343d40209929de4d60d58cb"
        run: bun run build

      # Set release version from tag
      - name: Set release version
        run: echo "RELEASE_VERSION=release-$GITHUB_REF_NAME" >> $GITHUB_ENV

      # Authenticate to Google Cloud
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      # Set up Cloud SDK
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      # Configure Docker for Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker asia-southeast2-docker.pkg.dev --quiet

      # Build and tag the Docker image
      - name: Build and tag Docker image
        working-directory: ./frontend-app
        run: |
          docker build --build-arg NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID="47ef282c9343d40209929de4d60d58cb" \
                       -t ${{ env.ARTIFACT_REGION }}/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:latest \
                       -t ${{ env.ARTIFACT_REGION }}/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:release \
                       -t ${{ env.ARTIFACT_REGION }}/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }} .

      # Push the Docker image to Artifact Registry
      - name: Push Docker image
        run: |
          docker push ${{ env.ARTIFACT_REGION }}/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.ARTIFACT_REGION }}/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:release
          docker push ${{ env.ARTIFACT_REGION }}/${{ env.PROJECT_ID }}/images/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
