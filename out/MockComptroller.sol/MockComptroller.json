{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addMarket","inputs":[{"name":"cToken","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimComp","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"cTokens","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"compAccrued","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"compToken","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"enterMarkets","inputs":[{"name":"cTokens","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"exitMarket","inputs":[{"name":"cToken","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getCompAccrued","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"cToken","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isMarketListed","inputs":[{"name":"cToken","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"markets","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"setCompAccrued","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"cToken","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x608060405234801561000f575f80fd5b505f80546001600160a01b0319166101231790556105f4806100305f395ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c80638e8f294b116100635780638e8f294b1461018f57806393e30633146101b1578063967d3a41146101e5578063c29982381461021d578063ede4edd01461023d575f80fd5b80631c3db2e01461009f578063223ccdb9146100b45780633d98a1e5146100ed5780636605dfa71461012d5780638a5928c014610157575b5f80fd5b6100b26100ad366004610417565b610250565b005b6100b26100c2366004610466565b6001600160a01b039283165f9081526002602090815260408083209490951682529290925291902055565b6101186100fb36600461049f565b6001600160a01b03165f9081526001602052604090205460ff1690565b60405190151581526020015b60405180910390f35b5f5461013f906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b6101816101653660046104bf565b600260209081525f928352604080842090915290825290205481565b604051908152602001610124565b61011861019d36600461049f565b60016020525f908152604090205460ff1681565b6100b26101bf36600461049f565b6001600160a01b03165f908152600160208190526040909120805460ff19169091179055565b6101816101f33660046104bf565b6001600160a01b039182165f90815260026020908152604080832093909416825291909152205490565b61023061022b3660046104f0565b6102ca565b604051610124919061052f565b61018161024b36600461049f565b505f90565b5f5b818110156102c4576001600160a01b0384165f9081526002602052604081208185858581811061028457610284610572565b9050602002016020810190610299919061049f565b6001600160a01b0316815260208101919091526040015f2055806102bc81610586565b915050610252565b50505050565b60605f8267ffffffffffffffff8111156102e6576102e66105aa565b60405190808252806020026020018201604052801561030f578160200160208202803683370190505b5090505f5b838110156103ac576001805f87878581811061033257610332610572565b9050602002016020810190610347919061049f565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f82828151811061038f5761038f610572565b6020908102919091010152806103a481610586565b915050610314565b509392505050565b80356001600160a01b03811681146103ca575f80fd5b919050565b5f8083601f8401126103df575f80fd5b50813567ffffffffffffffff8111156103f6575f80fd5b6020830191508360208260051b8501011115610410575f80fd5b9250929050565b5f805f60408486031215610429575f80fd5b610432846103b4565b9250602084013567ffffffffffffffff81111561044d575f80fd5b610459868287016103cf565b9497909650939450505050565b5f805f60608486031215610478575f80fd5b610481846103b4565b925061048f602085016103b4565b9150604084013590509250925092565b5f602082840312156104af575f80fd5b6104b8826103b4565b9392505050565b5f80604083850312156104d0575f80fd5b6104d9836103b4565b91506104e7602084016103b4565b90509250929050565b5f8060208385031215610501575f80fd5b823567ffffffffffffffff811115610517575f80fd5b610523858286016103cf565b90969095509350505050565b602080825282518282018190525f9190848201906040850190845b818110156105665783518352928401929184019160010161054a565b50909695505050505050565b634e487b7160e01b5f52603260045260245ffd5b5f600182016105a357634e487b7160e01b5f52601160045260245ffd5b5060010190565b634e487b7160e01b5f52604160045260245ffdfea26469706673582212204bcc09058b3372e7672c5377f5f81fadb981d5fb608c7bac21b2ed28d5fe57a664736f6c63430008140033","sourceMap":"158:3008:27:-:0;;;506:84;;;;;;;;;-1:-1:-1;530:9:27;:26;;-1:-1:-1;;;;;;530:26:27;550:5;530:26;;;158:3008;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f80fd5b506004361061009b575f3560e01c80638e8f294b116100635780638e8f294b1461018f57806393e30633146101b1578063967d3a41146101e5578063c29982381461021d578063ede4edd01461023d575f80fd5b80631c3db2e01461009f578063223ccdb9146100b45780633d98a1e5146100ed5780636605dfa71461012d5780638a5928c014610157575b5f80fd5b6100b26100ad366004610417565b610250565b005b6100b26100c2366004610466565b6001600160a01b039283165f9081526002602090815260408083209490951682529290925291902055565b6101186100fb36600461049f565b6001600160a01b03165f9081526001602052604090205460ff1690565b60405190151581526020015b60405180910390f35b5f5461013f906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b6101816101653660046104bf565b600260209081525f928352604080842090915290825290205481565b604051908152602001610124565b61011861019d36600461049f565b60016020525f908152604090205460ff1681565b6100b26101bf36600461049f565b6001600160a01b03165f908152600160208190526040909120805460ff19169091179055565b6101816101f33660046104bf565b6001600160a01b039182165f90815260026020908152604080832093909416825291909152205490565b61023061022b3660046104f0565b6102ca565b604051610124919061052f565b61018161024b36600461049f565b505f90565b5f5b818110156102c4576001600160a01b0384165f9081526002602052604081208185858581811061028457610284610572565b9050602002016020810190610299919061049f565b6001600160a01b0316815260208101919091526040015f2055806102bc81610586565b915050610252565b50505050565b60605f8267ffffffffffffffff8111156102e6576102e66105aa565b60405190808252806020026020018201604052801561030f578160200160208202803683370190505b5090505f5b838110156103ac576001805f87878581811061033257610332610572565b9050602002016020810190610347919061049f565b6001600160a01b03166001600160a01b031681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f82828151811061038f5761038f610572565b6020908102919091010152806103a481610586565b915050610314565b509392505050565b80356001600160a01b03811681146103ca575f80fd5b919050565b5f8083601f8401126103df575f80fd5b50813567ffffffffffffffff8111156103f6575f80fd5b6020830191508360208260051b8501011115610410575f80fd5b9250929050565b5f805f60408486031215610429575f80fd5b610432846103b4565b9250602084013567ffffffffffffffff81111561044d575f80fd5b610459868287016103cf565b9497909650939450505050565b5f805f60608486031215610478575f80fd5b610481846103b4565b925061048f602085016103b4565b9150604084013590509250925092565b5f602082840312156104af575f80fd5b6104b8826103b4565b9392505050565b5f80604083850312156104d0575f80fd5b6104d9836103b4565b91506104e7602084016103b4565b90509250929050565b5f8060208385031215610501575f80fd5b823567ffffffffffffffff811115610517575f80fd5b610523858286016103cf565b90969095509350505050565b602080825282518282018190525f9190848201906040850190845b818110156105665783518352928401929184019160010161054a565b50909695505050505050565b634e487b7160e01b5f52603260045260245ffd5b5f600182016105a357634e487b7160e01b5f52601160045260245ffd5b5060010190565b634e487b7160e01b5f52604160045260245ffdfea26469706673582212204bcc09058b3372e7672c5377f5f81fadb981d5fb608c7bac21b2ed28d5fe57a664736f6c63430008140033","sourceMap":"158:3008:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2097:334;;;;;;:::i;:::-;;:::i;:::-;;2662:136;;;;;;:::i;:::-;-1:-1:-1;;;;;2754:20:27;;;;;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;:37;2662:136;954:108;;;;;;:::i;:::-;-1:-1:-1;;;;;1040:15:27;1017:4;1040:15;;;:7;:15;;;;;;;;;954:108;;;;1769:14:29;;1762:22;1744:41;;1732:2;1717:18;954:108:27;;;;;;;;220:24;;;;;-1:-1:-1;;;;;220:24:27;;;;;;-1:-1:-1;;;;;1960:32:29;;;1942:51;;1930:2;1915:18;220:24:27;1796:203:29;429:66:27;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2415:25:29;;;2403:2;2388:18;429:66:27;2269:177:29;327:39:27;;;;;;:::i;:::-;;;;;;;;;;;;;;;;703:83;;;;;;:::i;:::-;-1:-1:-1;;;;;757:15:27;;;;;775:4;757:15;;;;;;;;:22;;-1:-1:-1;;757:22:27;;;;;;703:83;3023:141;;;;;;:::i;:::-;-1:-1:-1;;;;;3129:20:27;;;3103:7;3129:20;;;:11;:20;;;;;;;;:28;;;;;;;;;;;;;3023:141;1272:349;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1827:103::-;;;;;;:::i;:::-;-1:-1:-1;1881:7:27;;1827:103;2097:334;2324:9;2319:106;2339:18;;;2319:106;;;-1:-1:-1;;;;;2378:20:27;;2413:1;2378:20;;;:11;:20;;;;;2413:1;2399:7;;2407:1;2399:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2378:32:27;;;;;;;;;;;;-1:-1:-1;2378:32:27;:36;2359:3;;;;:::i;:::-;;;;2319:106;;;;2097:334;;;:::o;1272:349::-;1340:16;1368:24;1409:7;1395:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1395:29:27;;1368:56;;1448:9;1443:139;1463:18;;;1443:139;;;1524:4;1502:7;:19;1510:7;;1518:1;1510:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1502:19:27;-1:-1:-1;;;;;1502:19:27;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1555:1;1542:7;1550:1;1542:10;;;;;;;;:::i;:::-;;;;;;;;;;:14;1483:3;;;;:::i;:::-;;;;1443:139;;;-1:-1:-1;1607:7:27;1272:349;-1:-1:-1;;;1272:349:27:o;14:173:29:-;82:20;;-1:-1:-1;;;;;131:31:29;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:367::-;255:8;265:6;319:3;312:4;304:6;300:17;296:27;286:55;;337:1;334;327:12;286:55;-1:-1:-1;360:20:29;;403:18;392:30;;389:50;;;435:1;432;425:12;389:50;472:4;464:6;460:17;448:29;;532:3;525:4;515:6;512:1;508:14;500:6;496:27;492:38;489:47;486:67;;;549:1;546;539:12;486:67;192:367;;;;;:::o;564:511::-;659:6;667;675;728:2;716:9;707:7;703:23;699:32;696:52;;;744:1;741;734:12;696:52;767:29;786:9;767:29;:::i;:::-;757:39;;847:2;836:9;832:18;819:32;874:18;866:6;863:30;860:50;;;906:1;903;896:12;860:50;945:70;1007:7;998:6;987:9;983:22;945:70;:::i;:::-;564:511;;1034:8;;-1:-1:-1;919:96:29;;-1:-1:-1;;;;564:511:29:o;1080:328::-;1157:6;1165;1173;1226:2;1214:9;1205:7;1201:23;1197:32;1194:52;;;1242:1;1239;1232:12;1194:52;1265:29;1284:9;1265:29;:::i;:::-;1255:39;;1313:38;1347:2;1336:9;1332:18;1313:38;:::i;:::-;1303:48;;1398:2;1387:9;1383:18;1370:32;1360:42;;1080:328;;;;;:::o;1413:186::-;1472:6;1525:2;1513:9;1504:7;1500:23;1496:32;1493:52;;;1541:1;1538;1531:12;1493:52;1564:29;1583:9;1564:29;:::i;:::-;1554:39;1413:186;-1:-1:-1;;;1413:186:29:o;2004:260::-;2072:6;2080;2133:2;2121:9;2112:7;2108:23;2104:32;2101:52;;;2149:1;2146;2139:12;2101:52;2172:29;2191:9;2172:29;:::i;:::-;2162:39;;2220:38;2254:2;2243:9;2239:18;2220:38;:::i;:::-;2210:48;;2004:260;;;;;:::o;2451:437::-;2537:6;2545;2598:2;2586:9;2577:7;2573:23;2569:32;2566:52;;;2614:1;2611;2604:12;2566:52;2654:9;2641:23;2687:18;2679:6;2676:30;2673:50;;;2719:1;2716;2709:12;2673:50;2758:70;2820:7;2811:6;2800:9;2796:22;2758:70;:::i;:::-;2847:8;;2732:96;;-1:-1:-1;2451:437:29;-1:-1:-1;;;;2451:437:29:o;2893:632::-;3064:2;3116:21;;;3186:13;;3089:18;;;3208:22;;;3035:4;;3064:2;3287:15;;;;3261:2;3246:18;;;3035:4;3330:169;3344:6;3341:1;3338:13;3330:169;;;3405:13;;3393:26;;3474:15;;;;3439:12;;;;3366:1;3359:9;3330:169;;;-1:-1:-1;3516:3:29;;2893:632;-1:-1:-1;;;;;;2893:632:29:o;3530:127::-;3591:10;3586:3;3582:20;3579:1;3572:31;3622:4;3619:1;3612:15;3646:4;3643:1;3636:15;3662:232;3701:3;3722:17;;;3719:140;;3781:10;3776:3;3772:20;3769:1;3762:31;3816:4;3813:1;3806:15;3844:4;3841:1;3834:15;3719:140;-1:-1:-1;3886:1:29;3875:13;;3662:232::o;3899:127::-;3960:10;3955:3;3951:20;3948:1;3941:31;3991:4;3988:1;3981:15;4015:4;4012:1;4005:15","linkReferences":{}},"methodIdentifiers":{"addMarket(address)":"93e30633","claimComp(address,address[])":"1c3db2e0","compAccrued(address,address)":"8a5928c0","compToken()":"6605dfa7","enterMarkets(address[])":"c2998238","exitMarket(address)":"ede4edd0","getCompAccrued(address,address)":"967d3a41","isMarketListed(address)":"3d98a1e5","markets(address)":"8e8f294b","setCompAccrued(address,address,uint256)":"223ccdb9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"addMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"cTokens\",\"type\":\"address[]\"}],\"name\":\"claimComp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"cTokens\",\"type\":\"address[]\"}],\"name\":\"enterMarkets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"exitMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"getCompAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"isMarketListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setCompAccrued\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Mock implementation of Compound's Comptroller for testing\",\"kind\":\"dev\",\"methods\":{\"addMarket(address)\":{\"details\":\"Add a market to the markets mapping\",\"params\":{\"cToken\":\"The cToken to add\"}},\"claimComp(address,address[])\":{\"details\":\"Claim COMP rewards for an account\",\"params\":{\"account\":\"The account to claim for\",\"cTokens\":\"The cTokens to claim from\"}},\"enterMarkets(address[])\":{\"details\":\"Enter markets (i.e., enable an account to use a cToken as collateral)\",\"params\":{\"cTokens\":\"The cTokens to enter\"},\"returns\":{\"_0\":\"Success codes for each cToken (0 = success)\"}},\"exitMarket(address)\":{\"details\":\"Exit a market (i.e., disable an account from using a cToken as collateral)\",\"params\":{\"cToken\":\"The cToken to exit\"},\"returns\":{\"_0\":\"0 on success, otherwise an error code\"}},\"getCompAccrued(address,address)\":{\"details\":\"Get the amount of COMP accrued for an account and cToken\",\"params\":{\"account\":\"The account to get for\",\"cToken\":\"The cToken to get for\"},\"returns\":{\"_0\":\"The amount of COMP accrued\"}},\"isMarketListed(address)\":{\"details\":\"Check if a market is listed\",\"params\":{\"cToken\":\"The cToken to check\"},\"returns\":{\"_0\":\"True if the market is listed, false otherwise\"}},\"setCompAccrued(address,address,uint256)\":{\"details\":\"Set the amount of COMP accrued for an account and cToken\",\"params\":{\"account\":\"The account to set for\",\"amount\":\"The amount of COMP accrued\",\"cToken\":\"The cToken to set for\"}}},\"title\":\"MockComptroller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/mocks/MockComptroller.sol\":\"MockComptroller\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=contracts/lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=contracts/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=contracts/lib/forge-std/src/\",\":halmos-cheatcodes/=contracts/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=contracts/lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/test/mocks/MockComptroller.sol\":{\"keccak256\":\"0xfb8fd712a6e5ebeda4753035ec2f64b26d5c0a09dbe72a81d446210d67df1448\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d9964014e67240f2449572935ccf930ff7e913434f0d036ee941aa41323259c\",\"dweb:/ipfs/QmSsQxyKgpP1DuKDSDgF5a7bp42DstacCqLhBgdEUif56R\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"cToken","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addMarket"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address[]","name":"cTokens","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"claimComp"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"compAccrued","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"compToken","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address[]","name":"cTokens","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"enterMarkets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"cToken","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"exitMarket","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"cToken","type":"address"}],"stateMutability":"view","type":"function","name":"getCompAccrued","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"cToken","type":"address"}],"stateMutability":"view","type":"function","name":"isMarketListed","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"markets","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"cToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setCompAccrued"}],"devdoc":{"kind":"dev","methods":{"addMarket(address)":{"details":"Add a market to the markets mapping","params":{"cToken":"The cToken to add"}},"claimComp(address,address[])":{"details":"Claim COMP rewards for an account","params":{"account":"The account to claim for","cTokens":"The cTokens to claim from"}},"enterMarkets(address[])":{"details":"Enter markets (i.e., enable an account to use a cToken as collateral)","params":{"cTokens":"The cTokens to enter"},"returns":{"_0":"Success codes for each cToken (0 = success)"}},"exitMarket(address)":{"details":"Exit a market (i.e., disable an account from using a cToken as collateral)","params":{"cToken":"The cToken to exit"},"returns":{"_0":"0 on success, otherwise an error code"}},"getCompAccrued(address,address)":{"details":"Get the amount of COMP accrued for an account and cToken","params":{"account":"The account to get for","cToken":"The cToken to get for"},"returns":{"_0":"The amount of COMP accrued"}},"isMarketListed(address)":{"details":"Check if a market is listed","params":{"cToken":"The cToken to check"},"returns":{"_0":"True if the market is listed, false otherwise"}},"setCompAccrued(address,address,uint256)":{"details":"Set the amount of COMP accrued for an account and cToken","params":{"account":"The account to set for","amount":"The amount of COMP accrued","cToken":"The cToken to set for"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=contracts/lib/openzeppelin-contracts/contracts/","erc4626-tests/=contracts/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=contracts/lib/forge-std/src/","halmos-cheatcodes/=contracts/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=contracts/lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/test/mocks/MockComptroller.sol":"MockComptroller"},"evmVersion":"shanghai","libraries":{}},"sources":{"contracts/test/mocks/MockComptroller.sol":{"keccak256":"0xfb8fd712a6e5ebeda4753035ec2f64b26d5c0a09dbe72a81d446210d67df1448","urls":["bzz-raw://9d9964014e67240f2449572935ccf930ff7e913434f0d036ee941aa41323259c","dweb:/ipfs/QmSsQxyKgpP1DuKDSDgF5a7bp42DstacCqLhBgdEUif56R"],"license":"MIT"}},"version":1},"id":27}