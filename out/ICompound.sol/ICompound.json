{"abi":[{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"balanceOfUnderlying","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"exchangeRateCurrent","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"exchangeRateStored","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getAccruedInterest","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"mintAmount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeem","inputs":[{"name":"redeemTokens","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"redeemUnderlying","inputs":[{"name":"redeemAmount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"supplyRatePerBlock","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"balanceOf(address)":"70a08231","balanceOfUnderlying(address)":"3af9e669","exchangeRateCurrent()":"bd6d894d","exchangeRateStored()":"182df0f5","getAccruedInterest()":"564afa3a","mint(uint256)":"a0712d68","redeem(uint256)":"db006a75","redeemUnderlying(uint256)":"852a12e3","supplyRatePerBlock()":"ae9d70b0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAccruedInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for interacting with Compound protocol\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"Get the balance of cTokens held by an account\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"_0\":\"The balance of cTokens\"}},\"balanceOfUnderlying(address)\":{\"details\":\"Get the balance of underlying tokens held by an account in Compound\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"_0\":\"The balance of underlying tokens\"}},\"exchangeRateCurrent()\":{\"details\":\"Get the current exchange rate between cTokens and underlying tokens\",\"returns\":{\"_0\":\"The current exchange rate\"}},\"exchangeRateStored()\":{\"details\":\"Get the stored exchange rate between cTokens and underlying tokens\",\"returns\":{\"_0\":\"The stored exchange rate\"}},\"getAccruedInterest()\":{\"details\":\"Get the accrued interest for testing purposes\",\"returns\":{\"_0\":\"The accrued interest\"}},\"mint(uint256)\":{\"details\":\"Mint cTokens by supplying underlying tokens\",\"params\":{\"mintAmount\":\"The amount of underlying tokens to supply\"},\"returns\":{\"_0\":\"0 on success, otherwise an error code\"}},\"redeem(uint256)\":{\"details\":\"Redeem cTokens for underlying tokens\",\"params\":{\"redeemTokens\":\"The amount of cTokens to redeem\"},\"returns\":{\"_0\":\"0 on success, otherwise an error code\"}},\"redeemUnderlying(uint256)\":{\"details\":\"Redeem cTokens for a specific amount of underlying tokens\",\"params\":{\"redeemAmount\":\"The amount of underlying tokens to receive\"},\"returns\":{\"_0\":\"0 on success, otherwise an error code\"}},\"supplyRatePerBlock()\":{\"details\":\"Get the current supply rate per block\",\"returns\":{\"_0\":\"The supply rate per block (scaled by 1e18)\"}}},\"title\":\"ICompound\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/interfaces/ICompound.sol\":\"ICompound\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=contracts/lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=contracts/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=contracts/lib/forge-std/src/\",\":halmos-cheatcodes/=contracts/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=contracts/lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/src/interfaces/ICompound.sol\":{\"keccak256\":\"0x7cfcfafc4b35064f3807cccd7ffd95bc9a346981659ba40a09f5226d5c872ec0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abd5f1dd7ebaf45f1d0b10df7443a8bc2c995558c72d8b12f135fef9c3eab282\",\"dweb:/ipfs/QmX43BRgxq8ZD8uiEw1N7ka67PXVWnvW3xK6L8QWapaWU3\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"balanceOfUnderlying","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"exchangeRateCurrent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"exchangeRateStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getAccruedInterest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"mintAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"redeemTokens","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"redeemAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"redeemUnderlying","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"supplyRatePerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"balanceOf(address)":{"details":"Get the balance of cTokens held by an account","params":{"account":"The account to check"},"returns":{"_0":"The balance of cTokens"}},"balanceOfUnderlying(address)":{"details":"Get the balance of underlying tokens held by an account in Compound","params":{"account":"The account to check"},"returns":{"_0":"The balance of underlying tokens"}},"exchangeRateCurrent()":{"details":"Get the current exchange rate between cTokens and underlying tokens","returns":{"_0":"The current exchange rate"}},"exchangeRateStored()":{"details":"Get the stored exchange rate between cTokens and underlying tokens","returns":{"_0":"The stored exchange rate"}},"getAccruedInterest()":{"details":"Get the accrued interest for testing purposes","returns":{"_0":"The accrued interest"}},"mint(uint256)":{"details":"Mint cTokens by supplying underlying tokens","params":{"mintAmount":"The amount of underlying tokens to supply"},"returns":{"_0":"0 on success, otherwise an error code"}},"redeem(uint256)":{"details":"Redeem cTokens for underlying tokens","params":{"redeemTokens":"The amount of cTokens to redeem"},"returns":{"_0":"0 on success, otherwise an error code"}},"redeemUnderlying(uint256)":{"details":"Redeem cTokens for a specific amount of underlying tokens","params":{"redeemAmount":"The amount of underlying tokens to receive"},"returns":{"_0":"0 on success, otherwise an error code"}},"supplyRatePerBlock()":{"details":"Get the current supply rate per block","returns":{"_0":"The supply rate per block (scaled by 1e18)"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=contracts/lib/openzeppelin-contracts/contracts/","erc4626-tests/=contracts/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=contracts/lib/forge-std/src/","halmos-cheatcodes/=contracts/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=contracts/lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/src/interfaces/ICompound.sol":"ICompound"},"evmVersion":"shanghai","libraries":{}},"sources":{"contracts/src/interfaces/ICompound.sol":{"keccak256":"0x7cfcfafc4b35064f3807cccd7ffd95bc9a346981659ba40a09f5226d5c872ec0","urls":["bzz-raw://abd5f1dd7ebaf45f1d0b10df7443a8bc2c995558c72d8b12f135fef9c3eab282","dweb:/ipfs/QmX43BRgxq8ZD8uiEw1N7ka67PXVWnvW3xK6L8QWapaWU3"],"license":"MIT"}},"version":1},"id":24}